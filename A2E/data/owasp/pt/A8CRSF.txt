Específico da Aplicação
Exploração
MÉDIO
Prevalência
COMUM
Detecção
FÁCIL
Impacto
MODERADO
Agentes de Ameaça
Específico do Negócio / Aplicação
Considere qualquer pessoa que possa carregar conteúdo nos navegadores dos usuários, e assim forçá-los a fazer uma requisição para seu site. Qualquer site ou outro serviço html que usuários acessam pode fazer isso.
O atacante forja requisições HTTP falsas e engana uma vitima submetendo-a a um ataque através de tags de imagem, XSS, ou inúmeras outras técnicas. Se o usuário estiver autenticado, o ataque é bem sucedido.
O CSRF se aproveita do fato de que a maioria das aplicações web permitem que os atacantes prevejam todos os detalhes de uma ação particular da aplicação. Como os navegadores automaticamente trafegam credenciais como cookies de sessão, os atacantes podem criar páginas web maliciosas que geram requisições forjadas indistinguíveis das legítimas. Detecção de falhas de CSRF é bastante simples através de testes de penetração ou de análise de código.
Os atacantes podem enganar suas fazendo com que executem operações de mudança de estado que a vítima está autorizada a realizar, por ex., atualizando detalhes da sua conta, comprando, deslogando ou até mesmo efetuando login.
Considere o valor de negócio dos dados ou funções afetadas da aplicação. Imagine não ter a certeza se os usuários tem a intenção de realizar tais ações.
Considere o impacto na sua reputação.
Exemplo de Cenário de Ataque A aplicação permite que um usuário submeta uma requisição de mudança de estado que não inclui qualquer segredo. Por exemplo: http://exemplo.com/app/transferirFundos?quantia=1500 &contaDestino=4673243243 Com isso, o atacante constrói uma requisição que irá transferir dinheiro da conta da vítima para a conta do atacante, e então incorpora este ataque em uma requisição armazenada em uma imagem ou iframe em vários sites sob o controle do atacante: <img src="http://exemplo.com/app/transferirFundos? quantia=1500&contaDestino=contaAtacante#“ width="0" height="0" /> Se a vítima visitar qualquer um dos sites do atacante enquanto estiver autenticado em exemplo.com, essas requisições forjadas irão incluir automaticamente informações de sessão do usuário, autorizando o pedido do atacante.
Estou vulnerável?
Para verificar se uma aplicação é vulnerável, verifique se quaisquer links e formulários não possuam um token imprevisível de CSRF. Sem um token, os atacantes podem forjar requisições maliciosas. Uma alternativa de defesa é solicitar que o usuário prove a intenção de submeter a requisição, seja através de uma autenticação, ou alguma outra prova de que é um usuário real (por exemplo, um CAPTCHA).
Concentre-se nos links e formulários que invocam funções de mudança de estado, uma vez que esses são os alvos mais importantes de um CSRF.
Você deve verificar as transações em várias etapas, já que elas não são inerentemente imunes. Os atacantes podem facilmente forjar uma série de requisições usando múltiplas tags ou possivelmente Java Script.
Note que os cookies de sessão, endereços IP de origem, e outras informações que são enviadas automaticamente pelo navegador não fornecem nenhuma defesa contra CSRF uma vez que elas também são incluídas nas requisições forjadas.
A ferramenta de teste do OWASP CSRF Tester pode auxiliar com geração de casos de teste para demonstrar os perigos das falhas de CSRF.
Referências OWASP
• OWASP CSRF Article
• OWASP CSRF Prevention Cheat Sheet
• OWASP CSRFGuard - CSRF Defense Tool
• ESAPI Project Home Page
• ESAPI HTTPUtilities Class with AntiCSRF Tokens
• OWASP Testing Guide: Chapter on CSRF Testing
• OWASP CSRFTester - CSRF Testing Tool Externas
• CWE Entry 352 on CSRF
Como faço para evitar? A prevenção de um CSRF geralmente requer a inclusão de um token imprevisível em cada requisição HTTP. Tais tokens devem, no mínimo, ser únicos por sessão de usuário.
1.A opção preferida consiste em incluir um token único em um campo oculto. Isso faz com que o valor seja enviado no corpo da requisição HTTP, evitando-se a sua inserção na URL, que é mais propensa a exposição.
2.O token único pode ser incluído na própria URL, ou em parâmetros da URL. Contudo, tal posicionamento corre um risco maior já que a URL será exposta ao atacante, comprometendo assim o token secreto. O CSRF Guard do OWASP pode incluir tokens automaticamente em aplicações Java EE, .NET ou PHP. A ESAPI do OWASP disponibiliza métodos para desenvolvedores utilizarem na prevenção de vulnerabilidades de CSRF.
3.Exigir que o usuário autentique novamente, ou provar que são realmente um usuário (por exemplo, através de CAPTCHA) também pode proteger contra CSRF.
A8
Cross-Site Request Forgery (CSRF)