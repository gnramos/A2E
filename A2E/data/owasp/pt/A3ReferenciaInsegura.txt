Agentes de Ameaça
Específico da Aplicação
Exploração
FÁCIL
Prevalência
COMUM
Detecção
FÁCIL
Impacto
MODERADO
Específico do Negócio / Aplicação
Considere o tipo dos usuários do seu sistema. Qualquer usuário tem somente acesso parcial a determinados tipos de dados do sistema?
O atacante, que é um usuário autorizado do sistema, simplesmente muda o valor de um parâmetro que se refere diretamente a um objeto do sistema por outro objeto que o usuário não está autorizado. O acesso é concedido?
Aplicações freqüentemente usam o nome real ou a chave de um objeto ao gerar páginas web. Aplicações nem sempre verificam se o usuário é autorizado para o objeto alvo. Isto resulta numa falha de referência insegura e direta a um objeto. Testadores podem facilmente manipular valores de parâmetros para detectar tal falha. Análise de código rapidamente mostra se a autorização é verificada de forma adequada.
Tais falhas podem comprometer todos os dados que podem ser referenciados pelo parâmetro. A menos que as referências a objetos sejam imprevisíveis, é fácil para um atacante acessar todos os dados disponíveis desse tipo.
Impactos no Negócio
Considere o valor de negócio dos dados expostos.
Também considere o impacto ao negócio da exposição pública da vulnerabilidade.
Exemplo de Cenário de Ataque A aplicação utiliza dados não verificados em uma chamada SQL que está acessando as informações de conta: String query = "SELECT * FROM accts WHERE account = ?"; PreparedStatement pstmt = connection.prepareStatement(query , … ); pstmt.setString( 1, request.getParameter("acct")); ResultSet results = pstmt.executeQuery( ); O atacante simplesmente modifica o parâmetro ‘acct’ em seu navegador para enviar qualquer número de conta. Se não verificado adequadamente, o atacante pode acessar qualquer conta de usuário, em vez de somente a conta do cliente pretendido. http://example.com/app/accountInfo?acct=notmyacct
Estou vulnerável? A melhor forma de saber se uma aplicação é vulnerável a referência insegura e direta a objeto é verificar se todos os objetos referenciados possuem defesas apropriadas. Para atingir esse objetivo, considere:
1.Para referências diretas a recursos restritos, a aplicação falha em verificar se o usuário está autorizado a acessar o exato recurso que ele requisitou?
2.Se a referência é uma referência indireta, o mapeamento para a referência direta falha ao limitar os valores para aqueles autorizados para o usuário atual? Revisão de código da aplicação pode rapidamente verificar se qualquer abordagem é implementada com segurança. Teste também é efetivo para identificar referências diretas a objetos e se elas são seguras. Ferramentas automatizadas normalmente não procuram por essa falha, porque elas não podem reconhecer o que requer proteção ou o que é seguro ou inseguro.
Referências OWASP
• OWASP Top 10-2007 on Insecure Dir Object References
• ESAPI Access Reference Map API
• ESAPI Access Control API (See isAuthorizedForData(), isAuthorizedForFile(), isAuthorizedForFunction() ) Para requisitos adicionais de acesso de controle, veja o ASVS requirements area for Access Control (V4). Externas
• CWE Entry 639 on Insecure Direct Object References
• CWE Entry 22 on Path Traversal (um exemplo de um ataque de Referência Direta a Objeto)
Como faço para evitar? Prevenção a referência insegura e direta a objetos requer a seleção de uma abordagem para proteção de cada objeto acessível ao usuário (por exemplo, número do objeto, nome de arquivo):
1.Uso de referência indiretas a objetos por usuário ou sessão. Isso impede que o atacante atinja diretamente os recursos não autorizados. Por exemplo, em vez de utilizar a chave de banco de dados do recurso, uma lista de seis recursos autorizados para o usuário atual poderia utilizar os números de 1 a 6 para indicar qual valor o usuário selecionou. A aplicação tem que mapear as referências indiretas por usuário de volta para a chave do banco de dados real no servidor. OWASP’s ESAPI inclui tanto mapas de referência de acesso seqüencial e aleatório que os desenvolvedores podem usar para eliminar as referências diretas a objetos.
2.Verificar o acesso. Cada utilização de uma referência direta a objeto de uma origem não confiável deve incluir uma verificação de controle de acesso para garantir que o usuário está autorizado para o objeto requisitado.
Referência Insegura e Direta a Objetos
A4
Vulnerabilidades de Segurança
Vetores de Ataque
Impactos Técnicos