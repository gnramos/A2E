Específico da Aplicação
Exploração
DIFÍCIL
Prevalência
RARA
Detecção
MÉDIA
Impacto
SEVERO
Específico da Aplicação
Exploração
DIFÍCIL
Prevalência
RARA
Detecção
MÉDIA
Impacto
SEVERO
Agentes de Ameaça
Específico do Negócio / Aplicação
Considere quem pode ter acesso aos seus dados sensíveis e backups desses dados. Incluindo os dados em repouso, em tráfego, e até mesmo nos navegadores de seus clientes. Inclua tanto ameaças externas como internas.
Os atacantes normalmente não quebram diretamente a criptografia. Eles exploram de outra forma, como roubar chaves, aplicar ataques do tipo man-in-the-middle, ou roubar dados em texto claro fora do servidor, enquanto transitam, ou a partir do navegador do usuário.
A falha mais comum é simplesmente não criptografar dados sensíveis. Quando a criptografia é utilizada, a geração e gerenciamento de chaves é fraca, além da utilização de algoritmos e técnicas de hashing fracos. Vulnerabilidades no navegador são comuns e fácil de detectar, mas são difíceis de explorar em larga escala. Atacantes externos tem dificuldade em detectar falhas no lado do servidor, devido ao acesso limitado e também são geralmente mais difíceis de explorar.
A falha frequentemente compromete todos os dados que deveriam ter sido protegidos. Normalmente, essas informações incluem dados sensíveis tais como registros médicos, credenciais de acesso, dados pessoais, cartões de crédito, etc.
Considere o valor de negócio dos dados perdidos e o impacto para sua reputação. Qual é a sua responsabilidade legal se estes dados forem expostos? Considere também os danos à sua reputação.
Exemplos de Cenários de Ataque Cenário #1: Uma aplicação criptografa números de cartão de crédito em um banco de dados usando a criptografia automática do banco de dados. No en-tanto, isso significa que também descriptografa esses dados automaticamen-te quando recuperados, permitindo uma falha de injeção SQL para recuperar os números de cartão de crédito em texto claro. O sistema deveria ter cripto-grafado os números de cartão de crédito através de uma chave pública, e só permitir a descriptografia por aplicações de back-end com a chave privada. Cenário #2: Um site simplesmente não usa SSL em todas as páginas autenticadas. O atacante simplesmente monitora o tráfego de rede (como uma rede wireless aberta), e rouba o cookie de sessão do usuário. O atacante então reproduz este cookie e sequestra a sessão do usuário, acessando dados privados do mesmo. Cenário #3: O banco de dados de senhas dos usuários usa hashes simples (unsalted) para armazenar as senhas de todos. Uma falha de upload de arquivos permite que um atacante recupere o arquivo de senhas. Todos os hashes simples poderão ser expostos através de uma rainbow table de hashes pré-calculados.
Estou vulnerável? A primeira coisa que você deve determinar é quais dados são sensíveis o suficiente para exigir proteção extra. Por exemplo, senhas, números de cartão de crédito, registros médicos e informações pessoais devem ser protegidas. Para todos esses dados:
1.Qualquer um desses dados é armazenado em texto claro a longo prazo, incluindo backups de dados?
2.Qualquer um desses dados é transmitido em texto claro, internamente ou externamente? O tráfego de internet é especialmente perigoso.
3.Algum algoritmo de criptografia utilizado é fraco ou defasado?
4.As chaves criptográficas geradas são fracas, ou elas possuem um gerenciamento ou rodízio de forma adequada?
5.Algumas diretivas de segurança do navegador ou cabeçalhos estão ausentes quando os dados sensíveis são fornecidos/enviados ao navegador? Para um conjunto mais completo de problemas a serem evitados, consulte áreas do ASVS de Criptografia (V7), Proteção de dados (V9), e SSL (V10).
Referências OWASP - Para um conjunto mais completo de requisitos, consulte Requisitos do ASVS na Criptografia (V7), Proteção de Dados (V9) e Segurança das Comunicações (V10)
• OWASP Cryptographic Storage Cheat Sheet
• OWASP Password Storage Cheat Sheet
• OWASP Transport Layer Protection Cheat Sheet
• OWASP Testing Guide: Chapter on SSL/TLS Testing Externas
• CWE Entry 310 on Cryptographic Issues
• CWE Entry 312 on Cleartext Storage of Sensitive Information
• CWE Entry 319 on Cleartext Transmission of Sensitive Information
• CWE Entry 326 on Weak Encryption
Como faço para evitar? Os perigos completos da criptografia insegura, o uso de SSL e proteção de dados estão muito além do escopo do Top 10. Dito isto, no mínimo, faça todas as recomendações:
1.Considerando que você pretende proteger os dados de ameaças (como por exemplo, ataque interno ou de usuário externo), tenha a certeza de criptografar todos os dados sensíveis em repouso e em trânsito de uma forma que iniba estas ameaças.
2.Não armazene dados sensíveis desnecessariamente. Descarte-os o mais rápido possível. Dados que você não tem não podem ser roubados.
3.Certifique-se que o nível utilizado nos algoritmos e chaves são fortes, e que o gerenciamento de chaves está aplicado adequadamente. Considere utilizar os módulos criptográficos validados do FIPS-140.
4.Certifique-se que as senhas são armazenadas com um algoritmo projetado especialmente para a proteção de senhas, como o bcrypt, PBKDF2 ou scrypt.
5.Desabilite o autocompletar em formulários de coleta de dados sensí-veis e desabilite o cache em páginas que contenham dados sensíveis.
Exposição de Dados Sensíveis
A6
Vulnerabilidades de Segurança
Vetores de Ataque
Impactos Técnicos

Específico do Negócio / Aplicação
Considere quem pode ter acesso aos seus dados sensíveis e backups desses dados. Incluindo os dados em repouso, em tráfego, e até mesmo nos navegadores de seus clientes. Inclua tanto ameaças externas como internas.
Os atacantes normalmente não quebram diretamente a criptografia. Eles exploram de outra forma, como roubar chaves, aplicar ataques do tipo man-in-the-middle, ou roubar dados em texto claro fora do servidor, enquanto transitam, ou a partir do navegador do usuário.
A falha mais comum é simplesmente não criptografar dados sensíveis. Quando a criptografia é utilizada, a geração e gerenciamento de chaves é fraca, além da utilização de algoritmos e técnicas de hashing fracos. Vulnerabilidades no navegador são comuns e fácil de detectar, mas são difíceis de explorar em larga escala. Atacantes externos tem dificuldade em detectar falhas no lado do servidor, devido ao acesso limitado e também são geralmente mais difíceis de explorar.
A falha frequentemente compromete todos os dados que deveriam ter sido protegidos. Normalmente, essas informações incluem dados sensíveis tais como registros médicos, credenciais de acesso, dados pessoais, cartões de crédito, etc.
Considere o valor de negócio dos dados perdidos e o impacto para sua reputação. Qual é a sua responsabilidade legal se estes dados forem expostos? Considere também os danos à sua reputação.
Exemplos de Cenários de Ataque Cenário #1: Uma aplicação criptografa números de cartão de crédito em um banco de dados usando a criptografia automática do banco de dados. No en-tanto, isso significa que também descriptografa esses dados automaticamen-te quando recuperados, permitindo uma falha de injeção SQL para recuperar os números de cartão de crédito em texto claro. O sistema deveria ter cripto-grafado os números de cartão de crédito através de uma chave pública, e só permitir a descriptografia por aplicações de back-end com a chave privada. Cenário #2: Um site simplesmente não usa SSL em todas as páginas autenticadas. O atacante simplesmente monitora o tráfego de rede (como uma rede wireless aberta), e rouba o cookie de sessão do usuário. O atacante então reproduz este cookie e sequestra a sessão do usuário, acessando dados privados do mesmo. Cenário #3: O banco de dados de senhas dos usuários usa hashes simples (unsalted) para armazenar as senhas de todos. Uma falha de upload de arquivos permite que um atacante recupere o arquivo de senhas. Todos os hashes simples poderão ser expostos através de uma rainbow table de hashes pré-calculados.
Estou vulnerável? A primeira coisa que você deve determinar é quais dados são sensíveis o suficiente para exigir proteção extra. Por exemplo, senhas, números de cartão de crédito, registros médicos e informações pessoais devem ser protegidas. Para todos esses dados:
1.Qualquer um desses dados é armazenado em texto claro a longo prazo, incluindo backups de dados?
2.Qualquer um desses dados é transmitido em texto claro, internamente ou externamente? O tráfego de internet é especialmente perigoso.
3.Algum algoritmo de criptografia utilizado é fraco ou defasado?
4.As chaves criptográficas geradas são fracas, ou elas possuem um gerenciamento ou rodízio de forma adequada?
5.Algumas diretivas de segurança do navegador ou cabeçalhos estão ausentes quando os dados sensíveis são fornecidos/enviados ao navegador? Para um conjunto mais completo de problemas a serem evitados, consulte áreas do ASVS de Criptografia (V7), Proteção de dados (V9), e SSL (V10).
Referências OWASP - Para um conjunto mais completo de requisitos, consulte Requisitos do ASVS na Criptografia (V7), Proteção de Dados (V9) e Segurança das Comunicações (V10)
• OWASP Cryptographic Storage Cheat Sheet
• OWASP Password Storage Cheat Sheet
• OWASP Transport Layer Protection Cheat Sheet
• OWASP Testing Guide: Chapter on SSL/TLS Testing Externas
• CWE Entry 310 on Cryptographic Issues
• CWE Entry 312 on Cleartext Storage of Sensitive Information
• CWE Entry 319 on Cleartext Transmission of Sensitive Information
• CWE Entry 326 on Weak Encryption
Como faço para evitar? Os perigos completos da criptografia insegura, o uso de SSL e proteção de dados estão muito além do escopo do Top 10. Dito isto, no mínimo, faça todas as recomendações:
1.Considerando que você pretende proteger os dados de ameaças (como por exemplo, ataque interno ou de usuário externo), tenha a certeza de criptografar todos os dados sensíveis em repouso e em trânsito de uma forma que iniba estas ameaças.
2.Não armazene dados sensíveis desnecessariamente. Descarte-os o mais rápido possível. Dados que você não tem não podem ser roubados.
3.Certifique-se que o nível utilizado nos algoritmos e chaves são fortes, e que o gerenciamento de chaves está aplicado adequadamente. Considere utilizar os módulos criptográficos validados do FIPS-140.
4.Certifique-se que as senhas são armazenadas com um algoritmo projetado especialmente para a proteção de senhas, como o bcrypt, PBKDF2 ou scrypt.
5.Desabilite o autocompletar em formulários de coleta de dados sensí-veis e desabilite o cache em páginas que contenham dados sensíveis.
Exposição de Dados Sensíveis
A6
Vulnerabilidades de Segurança
Vetores de Ataque
Impactos Técnicos