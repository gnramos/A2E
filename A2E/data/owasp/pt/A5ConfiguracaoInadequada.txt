Agentes de Ameaça
Específico da Aplicação
Exploração FÁCIL
Prevalência
COMUM
Detecção
FÁCIL
Impacto
MODERADO
Específico do Negócio / Aplicação
Impactos no Negócio
Considere atacantes externos anônimos, bem como usuários com suas próprias contas que podem tentar comprometer o sistema. Considere também alguém internamente querendo disfarçar suas ações.
Atacante acessa contas padrão, páginas não utilizadas, falhas não corrigidas, arquivos e diretórios desprotegidos, etc, para obter acesso não autorizado ou conhecimento do sistema.
Configurações incorretas podem acontecer em qualquer nível da pilha da aplicação, incluindo a plataforma, servidor web, servidor de aplicação, banco de dados, framework e código personalizado. Desenvolvedores e administradores de sistemas precisam trabalhar juntos para garantir que toda a pilha esteja configurada corretamente. Scanners automatizados são úteis para detectar falta de atualizações, erros de configuração, uso de contas padrão, serviços desnecessários, etc.
Tais falhas frequen-temente permitem aos atacantes acesso não autorizado a alguns dados ou funcionalidade do sistema. Ocasionalmente, resultam no comprometimento completo do sistema.
O sistema poderia ser completamente comprometido sem você saber. Todos os seus dados podem ser roubados ou modificados lentamente ao longo do tempo. Custos de recuperação podem ser caros.
Exemplos de Cenários de Ataque Cenário #1: O console de administração do servidor de aplicação é instalado automaticamente e não é removido. Contas padrão não são alteradas. Atacantes descobrem as páginas padrão de administração que estão em seu servidor, fazem login com senhas padrão e assumem o acesso do ambiente. Cenário #2: A listagem de diretórios não está desativada em seu servidor. O atacante descobre que pode simplesmente listar os diretórios para encontrar qualquer arquivo. Atacante encontra e transfere todas as suas classes Java compiladas, e pode decompilar e fazer engenharia reversa para obter todo o seu código customizado. Assim, ele encontra uma falha grave de acesso de controle em sua aplicação. Cenário #3: Configuração do servidor de aplicação permite que os rastreamentos de pilha sejam devolvidos aos usuários, potencialmente expondo falhas potenciais. Atacantes adoram as mensagens de erro que fornecem informações extras. Cenário #4: servidor de aplicação vem com exemplos que não são removidos do seu servidor de produção. Aplicações de exemplo têm falhas de segurança conhecidas que os atacantes podem usar para comprometer o seu servidor.
Estou vulnerável? Está faltando a adequada proteção da segurança em qualquer parte da pilha de aplicação? Incluindo:
1.Algum software está desatualizado? Isto inclui o SO, servidor web/aplicação, SGBD, aplicações, e todas as bibliotecas de código (ver novo A9).
2.Existem recursos desnecessários ativados ou instalados (por exemplo, portas, serviços, páginas, contas, privilégios)?
3.Contas padrão e suas senhas ainda estão habilitadas e não foram alteradas?
4.Será que o tratamento de erros revelam rastreamentos de pilha ou outras mensagens de erro excessivamente informativas para os usuários?
5.As configurações de segurança em seus frameworks de desenvolvimento (por exemplo, Struts, Spring, ASP.NET) e bibliotecas estão definidas para proteger os valores? Sem um processo recorrente de configuração de segurança, seus sistemas estão expostos a um risco mais elevado.
Referências OWASP
• OWASP Development Guide: Chapter on Configuration
• OWASP Code Review Guide: Chapter on Error Handling
• OWASP Testing Guide: Configuration Management
• OWASP Testing Guide: Testing for Error Codes
• OWASP Top 10 2004 - Insecure Configuration Management Para requisitos adicionais nesta área, veja ASVS requirements area for Security Configuration (V12). Externas
• PC Magazine Article on Web Server Hardening
• CWE Entry 2 on Environmental Security Flaws
• CIS Security Configuration Guides/Benchmarks
Como faço para evitar? As recomendações primárias são para estabelecer todas as medidas:
1.Um processo de hardening recorrente que torne fácil e rápido de implantar outro ambiente que está devidamente blindado. Ambientes de desenvolvimento, controle de qualidade e produção devem ser todos configurados de forma idêntica (com senhas diferentes usadas em cada ambiente). Este processo deve ser automatizado para minimizar o esforço necessário para configurar um novo ambiente seguro.
2.Um processo para se manter a par e implantar todas as novas atualizações e correções de software em tempo hábil e em para cada ambiente. Este processo, deve incluir todas as bibliotecas de código (ver novo A9).
3.Uma arquitetura de aplicação forte que forneça a separação segura e eficaz entre os componentes.
4.Considere executar varreduras e fazer auditorias periodicamente para ajudar a detectar erros futuros de configuração ou correções ausentes.
Configuração Incorreta de Segurança
A5
Vulnerabilidades de Segurança
Vetores de Ataque
Impactos Técnicos